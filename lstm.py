# -*- coding: utf-8 -*-
"""LSTM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12paduRIInl-uAGsmuPG87zxAQE2qPhVF
"""

import pandas as pd
import numpy as np
import tensorflow as tf
from sklearn.feature_extraction.text import TfidfVectorizer
from keras.layers import Dense, LSTM
!pip install keras_preprocessing
from keras_preprocessing import text
from sklearn.preprocessing import MinMaxScaler
from keras.models import Sequential

df = pd.read_csv('/content/sample_data/url_spam_classification.csv', nrows=100)
# df = pd.read_csv('/content/sample_data/url_spam_classification.csv', nrows=10000, encoding='ISO-8859-1')
# df = pd.read_csv('/content/sample_data/url_spam_classification.csv', nrows=10000, delimiter='\t', encoding='ISO-8859-1')

df['is_spam'] = df['is_spam'].replace(['True','False'],[1,0])
len(df)
x = df['url']
y = df['is_spam']
tokens = text.Tokenizer()
tokens.fit_on_texts(x)
x = tokens.texts_to_matrix(x)
x.shape
from keras.models import Sequential#epochs21

model = Sequential()

model.add(LSTM(14959, activation='relu', input_shape=(10000, 14959)))
model.add(Dense(400, activation='relu')),            
model.add(Dense(1, activation='sigmoid')),
model.compile(loss='binary_crossentropy',               
optimizer='RMSPROP',                                        
metrics=['accuracy'])
from sklearn.model_selection import train_test_split
y = df['is_spam']

x_train,x_test,y_train,y_test = train_test_split(x,y,train_size=0.7, random_state=42)

model.fit(x_train,y_train,epochs=2, batch_size=32)